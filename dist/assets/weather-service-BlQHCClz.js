const n="https://api.open-meteo.com/v1/forecast";class o{static async getCurrentWeather(e){const t=new URL(n);t.searchParams.append("latitude",e.latitude.toString()),t.searchParams.append("longitude",e.longitude.toString()),t.searchParams.append("current_weather","true"),t.searchParams.append("timezone",e.timezone);const r=await fetch(t.toString());if(!r.ok)throw new Error(`Weather API error: ${r.status}`);return r.json()}static async getDailyForecast(e,t=7){const r=new URL(n);r.searchParams.append("latitude",e.latitude.toString()),r.searchParams.append("longitude",e.longitude.toString()),r.searchParams.append("daily","temperature_2m_max,temperature_2m_min,weathercode,precipitation_sum,windspeed_10m_max"),r.searchParams.append("forecast_days",t.toString()),r.searchParams.append("timezone",e.timezone);const a=await fetch(r.toString());if(!a.ok)throw new Error(`Weather API error: ${a.status}`);return a.json()}static async getHourlyForecast(e,t=24){const r=new URL(n);r.searchParams.append("latitude",e.latitude.toString()),r.searchParams.append("longitude",e.longitude.toString()),r.searchParams.append("hourly","temperature_2m,relative_humidity_2m,precipitation,weathercode,windspeed_10m"),r.searchParams.append("forecast_hours",t.toString()),r.searchParams.append("timezone",e.timezone);const a=await fetch(r.toString());if(!a.ok)throw new Error(`Weather API error: ${a.status}`);return a.json()}static async getCompleteWeatherData(e){const t=new URL(n);t.searchParams.append("latitude",e.latitude.toString()),t.searchParams.append("longitude",e.longitude.toString()),t.searchParams.append("current_weather","true"),t.searchParams.append("hourly","temperature_2m,relative_humidity_2m,precipitation,weathercode,windspeed_10m"),t.searchParams.append("daily","temperature_2m_max,temperature_2m_min,weathercode,precipitation_sum,windspeed_10m_max"),t.searchParams.append("timezone",e.timezone),t.searchParams.append("forecast_days","7");const r=await fetch(t.toString());if(!r.ok)throw new Error(`Weather API error: ${r.status}`);return r.json()}static formatTemperature(e,t="C"){return t==="F"?`${Math.round(e*9/5+32)}°F`:`${Math.round(e)}°C`}static formatWindSpeed(e,t="kmh"){return t==="mph"?`${Math.round(e*.621371)} mph`:`${Math.round(e)} km/h`}static formatDate(e){return new Date(e).toLocaleDateString("en-US",{weekday:"short",month:"short",day:"numeric"})}static formatTime(e){return new Date(e).toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0})}}export{o as WeatherService};
